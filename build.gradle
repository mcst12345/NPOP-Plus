plugins {
    id 'java'
    id 'net.minecraftforge.gradle' version '5.+'

}

group = 'miku'
version = '1.0-SNAPSHOT'


java {
    archivesBaseName = '!!!MikuLib'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                mikulib {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'


            mods {
                mikulib {
                    source sourceSets.main
                }
            }
        }
    }

}

sourceSets {
    main {
        resources {
            srcDir 'src/generated/resources'
        }
        java {
            //exclude 'net/minecraft/**'
            //exclude 'net/minecraftforge/**'
        }
    }
}

repositories {
    maven {
        name = "forge"
        url = "https://files.minecraftforge.net/maven"
    }

    maven { url = "https://repo.spongepowered.org/maven" }
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    implementation fileTree(dir: 'libs', includes: ['*jar'])
    implementation files("${System.getProperty('java.home')}/../lib/tools.jar")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "npop",
                "Specification-Vendor"    : "mcst12345",
                "Specification-Version"   : "1.0",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "mcst12345",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")

        ])
        attributes([
                'ForceLoadAsMod'             : 'true',
                "Premain-Class"              : "miku.npop.PreMain",
                "Can-Redefine-Classes"       : "true",
                "Can-Retransform-Classes"    : "true",
                "FMLCorePlugin"              : "miku.npop.FMLCore"
        ])
    }
    from{
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
